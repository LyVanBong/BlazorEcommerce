@page "/register"
@using BlazorEcommerce.Client.Services.AuthService
@inject IAuthService AuthService

<PageTitle>Register</PageTitle>
<h3>Register</h3>

<EditForm Model="@_userRegister" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="_userRegister.Email" class="form-control"></InputText>
        <ValidationMessage For="@(() => _userRegister.Email)" />
    </div>
    <div class="mb-3">
        <label for="passwd">Password</label>
        <InputText id="passwd" @bind-Value="_userRegister.Password" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => _userRegister.Password)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="_userRegister.ConfirmPassword" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => _userRegister.ConfirmPassword)" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <div class="text-danger">
        <span>@_errorMessage</span>
    </div>
</EditForm>

@code {
    private UserRegister _userRegister = new UserRegister();
    private string _errorMessage = string.Empty;


    private async Task HandleRegistration()
    {
        var result = await AuthService.Register(_userRegister);
        //if (!result.Success)
        //{
        //    _errorMessage = result.Message;
        //}
        //else
        //{
        //    _errorMessage = string.Empty;
        //}
        _errorMessage = result.Message;
    }
}